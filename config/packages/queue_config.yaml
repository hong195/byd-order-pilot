framework:
    messenger:

        failure_transport: failed

        transports:
            production_process_outbox:
                dsn: '%env(DOCTRINE_MESSENGER_TRANSPORT_DSN)%'
                options:
                    table_name: 'prod_process_outbox_message'
                    #works only with pgsql, built in notify support for pgsql
                    use_notify: true
                    auto_setup: true

            production_process:
                dsn: '%env(MESSENGER_TRANSPORT_DSN)%'
                retry_strategy:
                    max_retries: 3
                    delay: 1000
                    multiplier: 2
                    max_delay: 0
                    jitter: 0.1

                options:
                    exchange:
                        name: 'production_process'
                        type: 'topic'
                    queues:
                        production_process:
                            binding_keys:
                                - 'production_process.#'
                                - 'inventory.#'
                                - 'orders.#'

            inventory_outbox:
                dsn: '%env(DOCTRINE_MESSENGER_TRANSPORT_DSN)%'
                options:
                    table_name: 'inventory_outbox_message'
                    #works only with pgsql, built in notify support for pgsql
                    use_notify: true
                    auto_setup: true

            inventory:
                dsn: '%env(MESSENGER_TRANSPORT_DSN)%'
                retry_strategy:
                    max_retries: 3
                    delay: 1000
                    multiplier: 2
                    max_delay: 10000
                options:
                    exchange:
                        name: 'inventory'
                        type: 'topic'
                    queues:
                        inventory:
                            binding_keys:
                                - 'inventory.#'
                                - 'production_process.#'

            orders_outbox:
                dsn: '%env(DOCTRINE_MESSENGER_TRANSPORT_DSN)%'
                options:
                    table_name: 'order_outbox_message'
                    #works only with pgsql, built in notify support for pgsql
                    use_notify: true
                    auto_setup: true

            orders:
                dsn: '%env(MESSENGER_TRANSPORT_DSN)%'
                retry_strategy:
                    max_retries: 3
                    delay: 1000
                    multiplier: 2
                    max_delay: 10000
                options:
                    exchange:
                        name: 'orders'
                        type: 'topic'
                    queues:
                        orders:
                            binding_keys: ['orders.#', 'production_process.#']
            failed:
                dsn: '%env(MESSENGER_TRANSPORT_DSN)%'
                options:
                    exchange:
                        name: 'dlx_exchange'
                    queues:
                        dlq_queue: ~
        routing:
            #Doctrine Outbox messages
            'App\ProductionProcess\Infrastructure\Event\Outbox\OutboxMessage': production_process_outbox
            'App\Orders\Infrastructure\Event\Outbox\OutboxMessage': orders_outbox
            'App\Inventory\Infrastructure\Event\Outbox\OutboxMessage': inventory_outbox

            #Amqp messages
            'App\ProductionProcess\Infrastructure\Event\EventEnvelope': [production_process, inventory, orders]
            'App\Orders\Infrastructure\Event\EventEnvelope': [orders, production_process]
            'App\Inventory\Infrastructure\Event\EventEnvelope': [inventory, production_process]
